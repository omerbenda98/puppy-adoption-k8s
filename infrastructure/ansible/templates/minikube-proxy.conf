# HTTP redirect
server {
    listen 80;
    listen [::]:80;
    server_name puppyadoptions.duckdns.org;
    return 301 https://$server_name$request_uri;
}

# Production HTTPS
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name puppyadoptions.duckdns.org;

    # SSL Configuration
    ssl_certificate /home/ubuntu/puppy-adoptions-k8s/production/certificates/tls.crt;
    ssl_certificate_key /home/ubuntu/puppy-adoptions-k8s/production/certificates/tls.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Common proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Production Frontend & Backend through Ingress
    location / {
        proxy_pass http://192.168.49.2:80;  # Production ingress controller port
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
    }
}

# Staging HTTPS on port 32223
server {
    listen 32223 ssl;
    server_name puppyadoptions.duckdns.org;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/puppyadoptions.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/puppyadoptions.duckdns.org/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # Common proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Staging Frontend
    location / {
        proxy_pass http://192.168.49.2:32223;  # Staging frontend NodePort
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
    }

    # Staging Backend
    location /api {
        proxy_pass http://192.168.49.2:32224;  # Staging backend NodePort
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
    }
}